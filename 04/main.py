
# Задача 22:
# Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются
# в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во
# элементов второго множества. Затем пользователь вводит сами элементы
# множеств.

# def listCreation():
#     num = int(input('Введи количество элементов массива: '))
#     my_list = []
#     for i in range(num):
#         elem = int(input('Введи элемент: '))
#         my_list.append(elem)
#     return my_list
#
# a = listCreation()
# b = listCreation()
#
# a = set(a)
# b = set(b)
# print(sorted(a.union(b)))


# ===============================================================================

# Задача 24
# В фермерском хозяйстве в Карелии выращивают чернику. Она растет на круглой
# грядке, причем кусты высажены только по окружности. Таким образом, у каждого
# куста есть ровно два соседних. Всего на грядке растет N кустов.
# Семинар 4 2
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них
# выросло различное число ягод – на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым
# кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может
# собрать за один заход собирающий модуль, находясь перед некоторым кустом
# заданной во входном файле грядки.


def listCreation():
    num = int(input('Введи количество кустов: '))
    my_list = []
    for i in range(num):
        elem = int(input('Введи количество ягод на кусте: '))
        my_list.append(elem)
    return my_list

sum_max=0

number = listCreation()
for i in range(number):
    cursum = sum(number[i:i+3])
    if cursum > sum_max:
        sum_max = cursum
print(sum_max)

